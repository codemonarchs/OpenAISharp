#Requires -PSEdition Core
#Requires -Version 7

param(
    # Path to the metaproject .csproj file
    [Parameter(Mandatory = $true)]
    [ValidateScript({
            if (-Not ($_ | Test-Path) ) {
                throw "File does not exist."
            }
            if (-Not ($_ | Test-Path -PathType Leaf) ) {
                throw "The MetaProject argument must be a file. Folder paths are not allowed."
            }
            if ($_ -notmatch "\.csproj") {
                throw "The file specified in the MetaProject argument must be a .csproj file."
            }
            return $true 
        })]
    [System.IO.FileInfo]
    $MetaProject,

    # NuGet Version Generated by GitVersion
    [Parameter(Mandatory = $true)]
    [ValidateNotNullOrEmpty()]
    [ValidatePattern('[0-9]+\.[0-9]+\.[0-9]+')]
    [string]
    $NuGetVersion,

    # Assembly Version Generated by GitVersion
    [Parameter(Mandatory = $true)]
    [ValidateNotNullOrEmpty()]
    [ValidatePattern('[0-9]+\.[0-9]+\.[0-9]+')]
    [string]
    $AssemblyVersion,

    # SHA-1 Git Commit hash
    [Parameter(Mandatory = $true)]
    [ValidateNotNullOrEmpty()]
    [string]
    $Sha
)

# Note that this script has to be run from the root of the repository
$artifactsFolder = Join-Path -Path (Get-Location) -ChildPath 'artifacts'
$packOptions = "--output ${artifactsFolder} --configuration Release --no-restore --nologo -property:PackageVersion=${NuGetVersion} -property:AssemblyVersion=${AssemblyVersion} -property:FileVersion=${AssemblyVersion} -property:InformationalVersion=${Sha}"

# Build the MetaProject
Invoke-Expression -Command "dotnet pack ${MetaProject} ${packOptions}"

# Extract the relative paths from the metaproject
$packProjects = Select-Xml -Path $MetaProject -XPath '/Project/ItemGroup/ProjectReference' | ForEach-Object { $_.Node.Include }

# The bare [System.IO.FileInfo] object doesn't have the correct Directory information when cast as a parameter
$mpObject = Get-ChildItem -Path $MetaProject
Set-Location ($mpObject.DirectoryName)

foreach ($project in $packProjects) {
    Invoke-Expression "dotnet pack ${project} ${packOptions}"
}